---
- debug: 
    msg: Configuring user {{ username }} on host {{ ansible_host }}

- name: User Configuration - Add user
  user:
    name: "{{ username }}"
    password: "{{ password }}"
    groups: "{{ user_groups }}"
    append: no
    shell: /bin/zsh
    state: present

- name: User Configuration - Add user to wheel group
  user:
    name: "{{ username }}"
    groups: wheel
    append: yes
  when: sudo_user == "yes"

- name: User Configuration - clone oh-my-zsh
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'https://github.com/robbyrussell/oh-my-zsh.git'
    dest: '/home/{{ username }}/.oh-my-zsh'

- name: User Configuration - clone powerlevel10k
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: '/home/{{ username }}/.oh-my-zsh/custom/themes/powerlevel10k'

- name: User Configuration - clone zsh-autosuggestions
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
    dest: '/home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions'

- name: User Configuration - clone zsh-syntax-highlighting
  become: yes
  become_user: '{{ username }}'
  git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
    dest: '/home/{{ username }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting'

- name: User Configuration - Copy .zshrc
  copy: src=.zshrc dest=/home/{{ username }}/.zshrc owner={{ username }} group={{ username }}

- name: User Configuration - Copy .zshrc.user
  copy: src=.zshrc.user dest=/home/{{ username }}/.zshrc.{{ username }} owner={{ username }} group={{ username }}

- name: User Configuration - Copy .aliases
  copy: src=.aliases dest=/home/{{ username }}/.aliases owner={{ username }} group={{ username }}

- name: User Configuration - Copy .p10k.zsh
  copy: src=.p10k.zsh dest=/home/{{ username }}/.p10k.zsh owner={{ username }} group={{ username }}

- name: User Configuration - get python packages path
  shell: python3 -c 'import powerline, pathlib; print(pathlib.Path(powerline.__file__).parent)'
  register: powerline_package_path

- name: User Configuration - Copy .tmux.conf
  template: src=.tmux.conf.j2 dest=/home/{{ username }}/.tmux.conf owner={{ username }} group={{ username }}

- name: User Configuration - Copy .gitconfig
  template: src=.gitconfig.j2 dest=/home/{{ username }}/.gitconfig owner={{ username }} group={{ username }}

- name: Create ~/.docker directory
  file: path=/home/{{ username }}/.docker state=directory mode=0755

- name: Add proxy for docker containers
  template: src=dockerconfig.j2 dest=/home/{{ username }}/.docker/config.json owner={{ username }} group={{ username }} backup=yes
